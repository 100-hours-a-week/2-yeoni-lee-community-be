import express from 'express';
import path from 'path';
import { fileURLToPath } from 'url';
import session from 'express-session'; // ÏÑ∏ÏÖò
import cookieParser from 'cookie-parser'; // Ïø†ÌÇ§
//import sequelize from './db.js'; // DB ÏÑ§Ï†ï ÌååÏùº import
import pool from './db.js';
import userRoutes from './routes/route.js'; // Î©îÏù∏ ÎùºÏö∞ÌÑ∞
import sessionRouter from './routes/session.js'; // ÏÑ∏ÏÖò ÌôïÏù∏ ÎùºÏö∞ÌÑ∞
import cors from 'cors';

const app = express();
const PORT = process.env.PORT || 5000;

// üìå1.  CORS ÏÑ§Ï†ï
app.use(cors({
  origin: 'http://3.34.144.209:3000', 
  credentials: true, 
  methods: ['GET', 'POST', 'PUT', 'PATCH' , 'DELETE', 'OPTIONS'],
  allowedHeaders: ['Content-Type', 'Authorization'],
}));
/*
app.options('*', cors({
  origin: 'http://3.34.144.209:3000', // ÌóàÏö©Ìï† Origin
  credentials: true, // Ïø†ÌÇ§ Ìè¨Ìï®
}));
app.use(cors({
  origin: 'http://3.34.144.209:3000', // ÌóàÏö©Ìï† Origin
  credentials: true, // Ïø†ÌÇ§Î•º Ìè¨Ìï®Ìïú ÏöîÏ≤≠ ÌóàÏö©
  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],
  allowedHeaders: ['Content-Type', 'Authorization'],
}));

app.use((req, res, next) => {
  res.header('Access-Control-Allow-Origin', 'http://3.34.144.209:3000');
  res.header('Access-Control-Allow-Credentials', 'true');
  res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');
  res.header('Access-Control-Allow-Headers', 'Content-Type, Authorization');
  next();
});
*/


// __dirname ÏÑ§Ï†ï
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// üìå 2. JSON ÌååÏã± Î∞è ÏÑ∏ÏÖò ÏÑ§Ï†ï
app.use(cookieParser());
app.use(express.json()); // JSON ÌååÏã±
app.use(express.urlencoded({ extended: true })); // URL-encoded Îç∞Ïù¥ÌÑ∞ ÌååÏã±

app.use(
  session({
    secret: 'your_secret_key', // ÏÑ∏ÏÖò ÏïîÌò∏Ìôî ÌÇ§
    resave: false, // ÏÑ∏ÏÖòÏù¥ Î≥ÄÍ≤ΩÎêòÏßÄ ÏïäÏïÑÎèÑ Ï†ÄÏû• Ïó¨Î∂Ä
    saveUninitialized: false, // Ï¥àÍ∏∞ÌôîÎêòÏßÄ ÏïäÏùÄ ÏÑ∏ÏÖò Ï†ÄÏû• Ïó¨Î∂Ä
    cookie: {
      httpOnly: true, // JavaScriptÎ°ú Ïø†ÌÇ§ Ï†ëÍ∑º Î∂àÍ∞Ä
      secure: false, // HTTPSÏóêÏÑúÎßå ÏÇ¨Ïö© (Í∞úÎ∞ú Îã®Í≥ÑÏóêÏÑú false)
      maxAge: 1000 * 60 * 30, // ÏÑ∏ÏÖò Ïú†ÏßÄ ÏãúÍ∞Ñ: 30Î∂Ñ
      sameSite: 'lax', // CORS ÏöîÏ≤≠ÏóêÏÑúÎèÑ ÌóàÏö©
    },
  })
);


// üìå 3. Ï†ïÏ†Å ÌååÏùºÏùÑ APIÎ≥¥Îã§ Î®ºÏ†Ä Ï†úÍ≥µÌï¥Ïïº Ìï®
app.use('/uploads', express.static(path.join(__dirname, 'uploads')));
app.use('/profile', express.static(path.join(__dirname, 'profile')));
app.use(express.static(path.join(__dirname, '../2-yeoni-lee-community-fe/m_html')));
//app.use(express.static(path.join(process.cwd(), '../2-yeoni-lee-community-fe/m_html')));
// 4. ÎùºÏö∞ÌÑ∞ ÏÑ§Ï†ï
app.use('/', sessionRouter); // ÏÑ∏ÏÖò ÌôïÏù∏ ÎùºÏö∞ÌÑ∞
app.use('/api', userRoutes);


// üìå 5. APIÍ∞Ä Ï†ïÏùòÎêòÏßÄ ÏïäÏùÄ Í≤ΩÏö∞ 404 Ï≤òÎ¶¨ (JSON ÏùëÎãµ)
app.use((req, res) => {
  res.status(404).json({ error: 'Not Found' });
});


// ‚úÖ 6. ÌîÑÎ°†Ìä∏ ÎùºÏö∞ÌåÖ (ÏÉàÎ°úÍ≥†Ïπ®Ìï¥ÎèÑ Ï†ïÏÉÅ ÏûëÎèôÌïòÍ≤å)
app.get('*', (req, res) => {
  res.sendFile(path.join(__dirname, '../2-yeoni-lee-community-fe/m_html', '2_login.html'));
});

//7. ÏÑúÎ≤Ñ Ïã§Ìñâ
app.listen(PORT, () => {
  console.log(`‚úÖ Server is running on http://3.34.144.209:${PORT}`);
});

  // MariaDB Ïó∞Í≤∞ ÌÖåÏä§Ìä∏ API
app.get('/test-db', async (req, res) => {
  try {
    const [rows] = await pool.query('SELECT NOW() AS now'); // ÌòÑÏû¨ ÏãúÍ∞Ñ Í∞ÄÏ†∏Ïò§Í∏∞
    res.json({ success: true, serverTime: rows[0].now });
  } catch (error) {
    console.error('Database connection error:', error);
    res.status(500).json({ success: false, message: 'DB Ïó∞Í≤∞ Ïã§Ìå®' });
  }
});

(async () => {
  try {
    const conn = await pool.getConnection();
    console.log('‚úÖ Connected to MariaDB');
    conn.release();
  } catch (err) {
    console.error('‚ùå Database connection failed:', err);
  }
})();
  export const API_BASE_URL = 'http://3.34.144.209:3000';